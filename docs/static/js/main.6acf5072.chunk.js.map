{"version":3,"sources":["firebase/firebase-config.js","types/types.js","action/ui.js","action/auth.js","hooks/useForm.js","components/auth/RegisterScreen.js","components/auth/LoginScreen.js","routers/AuthRouter.js","routers/PublicRoute.js","routers/PrivateRoute.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","routers/AppRouter.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["googleAuthProvider","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","GoogleAuthProvider","types","setError","err","type","payload","finishLoading","startLoginEmailPassword","email","password","dispatch","auth","getAuth","signInWithEmailAndPassword","then","user","login","uid","displayName","catch","e","console","log","Swal","fire","message","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","RegisterScreen","useDispatch","msgError","useSelector","state","ui","password2","formValues","isFormValid","trim","length","validator","isEmail","className","onSubmit","preventDefault","createUserWithEmailAndPassword","a","updateProfile","startRegisterWithEmail","placeholder","autoComplete","onChange","to","LoginScreen","loading","onClick","disabled","signInWithPopup","src","alt","AuthRouter","path","component","PublicRoute","isAuthenticated","Component","rest","props","PrivateRoute","NotesAppBar","NoteScreen","JournalEntry","style","backgroundSize","backgroundImage","JournalEntries","map","Sidebar","signOut","JournalScreen","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","useEffect","onAuthStateChanged","exact","inicialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6acf5072.chunk.js","sourcesContent":["import 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { GoogleAuthProvider } from 'firebase/auth';\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDXVfSLQ7uCbU_NFgEdC3go_20uAGCqJnk\",\r\n    authDomain: \"react-apps-learning-361b0.firebaseapp.com\",\r\n    projectId: \"react-apps-learning-361b0\",\r\n    storageBucket: \"react-apps-learning-361b0.appspot.com\",\r\n    messagingSenderId: \"799019611136\",\r\n    appId: \"1:799019611136:web:31f65ec076e5dfc19f54e5\"\r\n};\r\n  \r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nconst db = getFirestore();\r\nconst googleAuthProvider = new GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider\r\n}\r\n","\r\n\r\nexport const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n    uiStartLoading: '[UI] Start Loading',\r\n    uiFinishLoading: '[UI] Finish Loading'\r\n}","import { types } from \"../types/types\"\r\n\r\nexport const setError = ( err ) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = ( ) => ({\r\n    type: types.uiRemoveError\r\n});\r\nexport const startLoading = ( ) => ({\r\n    type: types.uiStartLoading\r\n});\r\n\r\nexport const finishLoading = ( ) => ({\r\n    type: types.uiFinishLoading\r\n});","import Swal from 'sweetalert2';\r\nimport { getAuth, signInWithEmailAndPassword, signInWithPopup, createUserWithEmailAndPassword, updateProfile, signOut } from 'firebase/auth';\r\nimport { googleAuthProvider } from \"../firebase/firebase-config\";\r\nimport { types } from \"../types/types\"\r\nimport { startLoading, finishLoading } from './ui';\r\n\r\nexport const startLoginEmailPassword = ( email, password) => {\r\n    return (dispatch) => {\r\n        dispatch( startLoading() );\r\n        const auth = getAuth();\r\n        signInWithEmailAndPassword( auth, email, password)\r\n            .then( ({ user }) => {\r\n                dispatch( login( user.uid, user.displayName ));\r\n                \r\n                dispatch( finishLoading() );\r\n            }).catch( e => {\r\n                console.log(e);\r\n                dispatch( finishLoading() );\r\n                Swal.fire('Error', e.message, 'error');\r\n            });\r\n    };\r\n};\r\n\r\nexport const startRegisterWithEmail = ( email, password, name ) => {\r\n    return ( dispatch) => {\r\n        const auth = getAuth();\r\n        createUserWithEmailAndPassword( auth, email, password)\r\n            .then( async ({ user }) => {\r\n\r\n                await updateProfile( user, { displayName: name });\r\n                dispatch( login( user.uid, user.displayName) );\r\n            })\r\n            .catch( e => {\r\n                console.log(e);\r\n                Swal.fire('Error', e.message, 'error');\r\n            });\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        const auth = getAuth();\r\n        signInWithPopup( auth, googleAuthProvider)\r\n            .then( ({ user }) => {\r\n                dispatch(\r\n                    login( user.uid, user.displayName)\r\n                );\r\n            });\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => {\r\n    return { \r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    };\r\n};\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) =>{\r\n        const auth = getAuth();\r\n        signOut( auth);\r\n        dispatch( logout() );\r\n    }\r\n};\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n});","import { useState } from 'react'\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [ values, setValues ] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n    }\r\n\r\n    return [ values, handleInputChange, reset];\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport validator from 'validator';\r\nimport { removeError, setError } from '../../action/ui';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startRegisterWithEmail } from '../../action/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector( state => state.ui);\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        name: 'Antonio',\r\n        email: 'josek106@gmail.com',\r\n        password: 123456,\r\n        password2: 123456\r\n    });\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( isFormValid() ){\r\n            dispatch( startRegisterWithEmail( email, password, name ) );\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n        if( name.trim().length === 0 ) {\r\n            dispatch( setError('Name is required') );\r\n            return false;\r\n        } else if ( !validator.isEmail( email ) ){\r\n            dispatch( setError('Email is not valid') );\r\n            return false;\r\n        } else if ( password.length < 6){\r\n            dispatch( setError('Password should be at least 6 characters') );\r\n            return false;\r\n        } else if ( password !== password2 ){\r\n            dispatch( setError('Password doesn´t match') );\r\n            return false;\r\n        }\r\n        dispatch( removeError() );\r\n        return true;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form onSubmit={ handleRegister }>\r\n                { \r\n                    msgError &&\r\n                    <div className=\"auth__alert-error\">\r\n                        { msgError }\r\n                    </div>\r\n                }\r\n\r\n                <input className=\"auth__input\" type=\"text\" \r\n                    placeholder=\"Name\" name=\"name\" value={ name }\r\n                    autoComplete=\"off\" onChange={ handleInputChange } />\r\n                <input className=\"auth__input\" type=\"text\" \r\n                    placeholder=\"Email\" name=\"email\" value={ email }\r\n                    autoComplete=\"off\" onChange={ handleInputChange } />\r\n                <input className=\"auth__input\" type=\"password\" \r\n                    placeholder=\"Password\" name=\"password\" \r\n                    value={ password } onChange={ handleInputChange } />\r\n                <input className=\"auth__input\" type=\"password\" \r\n                    placeholder=\"Confirm Password\" name=\"password2\" \r\n                    value={ password2 } onChange={ handleInputChange } />\r\n                <button className=\"btn btn-primary btn-block mb-5\" \r\n                    type=\"submit\" /* onClick={ handleRegister } */>\r\n                    Register\r\n                </button>\r\n\r\n                <Link className=\"link mt-5\" to=\"/auth/login\">\r\n                    Already registered?\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { startLoginEmailPassword, startGoogleLogin } from '../../action/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading } = useSelector( state => state.ui);\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        email: 'josek106@gmail.com',\r\n        password: '123456'\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch( startLoginEmailPassword( email, password ) );\r\n    }\r\n\r\n    const handleGoogleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form>\r\n                <input className=\"auth__input\" type=\"text\" \r\n                    placeholder=\"Email\" name=\"email\" \r\n                    autoComplete=\"off\" value={ email } \r\n                    onChange={ handleInputChange } />\r\n                <input className=\"auth__input\" type=\"password\" \r\n                    placeholder=\"Password\" name=\"password\" \r\n                    value={ password } onChange={ handleInputChange } />\r\n                <button className=\"btn btn-primary btn-block\" \r\n                    type=\"submit\" onClick={ handleLogin }\r\n                    disabled={ loading }>\r\n                    Login\r\n                </button>\r\n\r\n                <hr />\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with Social Networks</p>\r\n                    <div className=\"google-btn\" onClick={ handleGoogleLogin }>\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link className=\"link\" to=\"/auth/register\">\r\n                    Create new account\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                \r\n                <Switch>\r\n                    <Route path= '/auth/login' component={ LoginScreen } />\r\n                    <Route path= '/auth/register' component={ RegisterScreen } />\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect} from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( !isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/\" /> )\r\n            )}\r\n            \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect} from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({ isAuthenticated, component: Component , ...rest }) => {\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/auth/login\" /> )\r\n            )}\r\n            \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const NotesAppBar = () => {\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span> 28 de Agosto de 2020</span>\r\n            <div>\r\n                <button className=\"btn\">\r\n                    Picture\r\n                </button>\r\n                <button className=\"btn\">\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n    return (\r\n        <div className=\"notes_main-content\">\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n                <input className=\"notes__title-input\" type=\"text\" placeholder=\"Title\" autoComplete=\"off\" />\r\n                <textarea className=\"notes__textarea\" placeholder=\"Entry content\" ></textarea>\r\n\r\n                <div className=\"notes__image\">\r\n                    <img src=\"https://www.alvientooo.com/wp-content/uploads/2019/03/Lamprea_arbo_lamprea_en_galicia_blog_gastronomia-36-1.jpeg\" alt=\"Imagen\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const JournalEntry = () => {\r\n    return (\r\n        <div className=\"journal__entry pointer\">\r\n            <div className=\"journal__entry-picture\" style={{\r\n                backgroundSize: 'cover',\r\n                backgroundImage: 'url(https://lh3.googleusercontent.com/_0OiZeWgElIETUMZW8B9wEZR-V0BLMyDBHfK6hdYQVGzsryLQAZ0GEL9_PDi5NlzmpK8bETuJcZ0CtUQKnErvs36Xw=w640-h400-e365-rj-sc0x00ffffff)'\r\n            }}>\r\n            </div>\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    Ad Astrum\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    Lorem Ipsum\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>Monday</span>\r\n                <h4>28</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { JournalEntry } from './JournalEntry'\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const entries = [1,2,3,4,5]\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                entries.map( value => (\r\n                    <JournalEntry key={value} />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogout } from '../../action/auth';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleLogout = ()=>{\r\n        dispatch( startLogout() );\r\n    };\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span>Fernando</span>\r\n                </h3>\r\n\r\n                <button className=\"btn\" onClick={ handleLogout } >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"journal__new-entry\">\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">New Entry</p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { Sidebar } from './Sidebar'\r\n// import { NoEntrySelected } from './NoEntrySelected'\r\n\r\nexport const JournalScreen = () => {\r\n    return (\r\n        <div className=\"journal__main-content\">\r\n            <Sidebar />\r\n\r\n            <main>\r\n                {/* <NoEntrySelected /> */}\r\n                <NoteScreen />\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getAuth, onAuthStateChanged } from '@firebase/auth';\r\nimport { login } from '../action/auth';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const auth = getAuth();\r\n        onAuthStateChanged( auth, (user) => {\r\n            if ( user?.uid ){\r\n                dispatch( login( user.uid, user.displayName ));\r\n                setIsLoggedIn(true);\r\n            } else {\r\n                setIsLoggedIn(false);\r\n            };\r\n            setChecking(false);\r\n        });\r\n    }, [ dispatch, setChecking, setIsLoggedIn ])\r\n\r\n    if( checking ){\r\n        return (\r\n            <h1>Espere...</h1>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute path= '/auth' component={AuthRouter} isAuthenticated={isLoggedIn}  />\r\n                    <PrivateRoute exact path= '/' component={JournalScreen} isAuthenticated={isLoggedIn} />\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst inicialState = {\r\n    loading: false,\r\n    msgError: null\r\n};\r\n\r\nexport const uiReducer = (state = inicialState, action) => {\r\n\r\n    switch( action.type ){\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        case types.uiRemoveError:\r\n            return { \r\n                ...state,\r\n                msgError: null\r\n            }\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case types.uiFinishLoading:\r\n            return { \r\n                ...state,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, compose, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer\r\n})\r\n\r\nexport const store = createStore(reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n\r\n    switch( action.type ){\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        case types.logout:\r\n            return { }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}